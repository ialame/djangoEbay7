from django.db import models

class Serie(models.Model):
    id = models.AutoField(primary_key=True)
    name = models.TextField(max_length=120,default=0)
    Image = models.TextField(max_length=120,default=0)
    nom = models.TextField(max_length=120,default=0)
    nomFR = models.TextField(max_length=120,default=0)
    nomUS = models.TextField(max_length=120,default=0)
    nomDossier = models.TextField(max_length=120,default=0)
    NbExtensions = models.IntegerField(default=0)
    annee = models.IntegerField(default=0)
    annee2 = models.IntegerField(default=0)

    def __str__(self):
        return self.name


class Extension(models.Model):
    id = models.AutoField(primary_key=True)
    baseSetSize = models.IntegerField(blank=True)
    block = models.TextField(max_length=120,blank=True)
    #boosterV3 = models.TextField(max_length=120,default=0)#array(array,string)
    #cards  array(object)
    code = models.TextField(max_length=120,blank=True)
    codeV3 = models.TextField(max_length=120,blank=True)
    isFoilOnly = models.IntegerField(null=False, blank=True)
    isOnlineOnly = models.IntegerField(null=False, blank=True)
    keyruneCode = models.TextField(max_length=120,blank=True)
    mcmName = models.TextField(max_length=120,blank=True)
    mcmId = models.IntegerField(blank=True)
    #meta = models.TextField(max_length=120,default=0)#object(string:string)
    mtgoCode = models.TextField(max_length=120,blank=True)
    name = models.TextField(max_length=120,blank=True)
    parentCode = models.TextField(max_length=120,blank=True)
    releaseDate = models.TextField(max_length=120,blank=True)
    #tcgplayerGroupId = models.IntegerField(blank=True)
    #tokens   array(object)
    totalSetSize = models.IntegerField(blank=True)
    #translation object(string:string)
    type = models.TextField(max_length=120,blank=True)

    def __str__(self):
        return self.name


class Carte(models.Model):
    id = models.AutoField(primary_key=True)
    idPCA = models.CharField(max_length=200,blank=True)
    name =models.CharField(max_length=200,blank=True)
    # nameFR = models.TextField(max_length=120,default=0)
    # nameUS = models.TextField(max_length=120,default=0)
    # num = models.TextField(max_length=120,default=0)
    # sur = models.TextField(max_length=120,default=0)
    # recherche = models.TextField(max_length=120,default=0)
    # nomComplet = models.TextField(max_length=120,default=0)
    # nomFrancaisEBAY = models.TextField(max_length=120,default=0)
    # nomAnglaisEBAY = models.TextField(max_length=120,default=0)
    # nomJapEBAY = models.TextField(max_length=120,default=0)
    # nomFrancaisZEBRA = models.TextField(max_length=120,default=0)
    # nomAllemandZEBRA = models.TextField(max_length=120,default=0)
    # nomItalienZEBRA = models.TextField(max_length=120,default=0)
    # nomEspagnolZEBRA = models.TextField(max_length=120,default=0)
    # nomRusseZEBRA = models.TextField(max_length=120,default=0)
    # nomPortugaisZEBRA = models.TextField(max_length=120,default=0)
    # nomJapZEBRA = models.TextField(max_length=120,default=0)
    # nomAnglaisZEBRA = models.TextField(max_length=120,default=0)
    # nomCompletFR = models.TextField(max_length=120,default=0)
    # nomCompletUS = models.TextField(max_length=120,default=0)
    # nomCompletJAP = models.TextField(max_length=120,default=0)
    # table = models.TextField(max_length=120,default=0)
    # FR = models.BooleanField(null=False,default=0)
    # US = models.BooleanField(null=False,default=0)
    # extension = models.ForeignKey(Extension, on_delete=models.CASCADE)
    # artist = models.TextField(default=0)
    # borderColor = models.TextField(default=0)
    # colorIdentity = models.TextField(default=0)
    # colorIndicator = models.TextField(default=0)
    # colors = models.TextField(default=0)
    # convertedManaCost = models.DecimalField(decimal_places=2, max_digits=7,default=0)
    # duelDeck = models.TextField(default=0)
    # faceConvertedManaCost = models.DecimalField(decimal_places=2, max_digits=7,default=0)
    # flavorText = models.TextField(default=0)
    # frameEffect = models.TextField(default=0)
    # frameVersion = models.TextField(default=0)
    # hand = models.TextField(default=0)
    # hasFoil = models.BooleanField(null=False, default=0)
    # hasNonFoil = models.BooleanField(null=False, default=0)
    # isAlternative = models.BooleanField(null=False, default=0)
    # isOnlineOnly = models.BooleanField(null=False, default=0)
    # isOversized = models.BooleanField(null=False, default=0)
    # isReserved = models.BooleanField(null=False, default=0)
    # isStarter = models.BooleanField(null=False, default=0)
    # isTimeshifted = models.BooleanField(null=False, default=0)
    # layout = models.TextField(default=0)
    # loyalty = models.TextField(default=0)
    # manaCost = models.TextField(default=0)
    # mcmName = models.TextField(default=0)
    # mcmId = models.IntegerField(default=0)
    # mcmMetaId = models.IntegerField(null=False, default=0)
    # mtgstocksId = models.IntegerField(null=False, default=0)
    # multiverseId = models.IntegerField(default=0)
    # names = models.TextField(default=0)
    # number = models.TextField(default=0)
    # originalText = models.TextField(default=0)
    # originalType = models.TextField(default=0)
    # printings = models.TextField(default=0)
    # prices = models.TextField(default=0)
    # power = models.TextField(default=0)
    # purchaseUrls = models.TextField(default=0)
    # rarity = models.TextField(default=0)
    # scryfallId = models.TextField(default=0)
    # scryfallOracleId = models.TextField(default=0)
    # scryfallIllustrationId = models.TextField(default=0)
    # setCode = models.TextField(default=0)
    # side = models.TextField(default=0)
    # subtypes = models.TextField(default=0)
    # supertypes = models.TextField(default=0)
    # tcgplayerProductId = models.IntegerField(default=0)
    # tcgplayerPurchaseUrl = models.TextField(default=0)
    # text = models.TextField(default=0)
    # toughness = models.TextField(default=0)
    # type = models.TextField(default=0)
    # types = models.TextField(default=0)
    # uuid = models.CharField(max_length=36,default=0)
    # uuidV421 = models.TextField(default=0)
    # variations = models.TextField(default=0)
    # watermark = models.TextField(default=0)

    def __str__(self):
        return self.name

